<Window x:Class="HoloBlok.Forms.ViewSelectionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Select Views to Tag Doors" 
        Height="500" 
        Width="400"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        MinHeight="300"
        MinWidth="300"
        FontFamily="Segoe UI">

    <Window.Resources>
        <!-- Define brand color -->
        <SolidColorBrush x:Key="BrandColorBlue" Color="#0884FC"/>
        <SolidColorBrush x:Key="BrandColorHover" Color="#0670DD"/>
        <SolidColorBrush x:Key="BrandColorGrey" Color="#454445"/>

        <!-- Custom CheckBox Style -->
        <Style x:Key="CustomCheckBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Custom checkbox appearance -->
                            <Border x:Name="CheckBoxBorder" 
                                    Grid.Column="0"
                                    Width="18" 
                                    Height="18"
                                    CornerRadius="4"
                                    BorderThickness="1.5"
                                    BorderBrush="{StaticResource BrandColorBlue}"
                                    Background="White"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            </Border>

                            <!-- Content -->
                            <ContentPresenter Grid.Column="1" 
                                              Margin="8,0,0,0"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Checked state -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource BrandColorBlue}"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource BrandColorBlue}"/>
                            </Trigger>

                            <!-- Hover state -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource BrandColorHover}"/>
                            </Trigger>

                            <!-- Checked + Hover state -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource BrandColorHover}"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource BrandColorHover}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Margin" Value="5,3"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BrandColorBlue}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>

            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource BrandColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#0560BB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource BrandColorGrey}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrandColorBlue}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#F0F7FF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#E0EFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" 
                   Text="Select Views To Tag Doors" 
                   FontFamily="Segoe UI"
                   FontWeight="Bold"
                   FontSize="18" 
                   Foreground="#1A1A1A"
                   Margin="0,0,0,15"/>

        <!-- View List -->
        <Border Grid.Row="1" 
        BorderBrush="#E0E0E0" 
        BorderThickness="1"
        CornerRadius="6"
        Margin="0,0,0,15"
        Background="#FAFAFA">
            <!-- Remove the ScrollViewer wrapper -->
            <ListBox x:Name="ViewListBox" 
             SelectionMode="Extended"
             BorderThickness="0"
             Background="Transparent"
             Padding="10"
             ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border x:Name="ItemBorder"
                                    Background="Transparent"
                                    Padding="2">
                                        <ContentPresenter/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#F5F5F5"/>
                                        </Trigger>
                                        <!-- Add selection trigger -->
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#E3F2FD"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!-- Enable proper selection behavior -->
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}" 
                          Content="{Binding ViewName}"
                          Style="{StaticResource CustomCheckBox}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>

        <!-- Select/Deselect All -->
        <StackPanel Grid.Row="2" 
                    Orientation="Horizontal" 
                    Margin="0,0,0,20">
            <Button x:Name="SelectAllButton" 
                    Content="Select All" 
                    Style="{StaticResource SecondaryButton}"
                    Width="100" 
                    Margin="0,0,10,0"
                    Click="SelectAllButton_Click"/>
            <Button x:Name="DeselectAllButton" 
                    Content="Deselect All" 
                    Style="{StaticResource SecondaryButton}"
                    Width="100"
                    Click="DeselectAllButton_Click"/>
        </StackPanel>

        <!-- OK/Cancel Buttons -->
        <StackPanel Grid.Row="3" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Right">
            <Button x:Name="OkButton" 
                    Content="OK" 
                    Style="{StaticResource PrimaryButton}"
                    Width="85" 
                    Margin="0,0,10,0"
                    Click="OkButton_Click"
                    IsDefault="True"/>
            <Button x:Name="CancelButton" 
                    Content="Cancel" 
                    Style="{StaticResource SecondaryButton}"
                    Width="85"
                    Click="CancelButton_Click"
                    IsCancel="True"/>
        </StackPanel>
    </Grid>
</Window>